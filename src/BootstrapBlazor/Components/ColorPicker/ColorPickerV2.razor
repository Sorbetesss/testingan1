@namespace BootstrapBlazor.Components
@inherits ValidateBase<string>
@attribute [BootstrapModuleAutoLoader("ColorPicker/ColorPickerV2.razor.js")]

@if (IsShowLabel)
{
    <BootstrapLabel required="@Required" for="@Id" ShowLabelTooltip="ShowLabelTooltip" Value="@DisplayText" />
}
<div class="input-group color-picker">

    <Button class="color-picker-button" OnClick="OpenSettingViewChanged" Color="Color.None">
        <div class="color-picker-preview" style="background-color: @_previewColor;"></div>
    </Button>

    <div class="color-picker-view shadow" style="display: @OpenSettingView">

        <div class="color-palette" id="@_colorPaletteId"
             @onmousemove="@MoveOnColorPalette"
             @onmouseup="() => _isSelectColorPaletteRoundBlock = false"
             @onmouseout="() => _isSelectColorPaletteRoundBlock = false"
             @onclick="@SelectColorPalette"
             style="background-image:
                 linear-gradient(to bottom, hsl(@_hueValue, 0%, 100%), hsl(@_hueValue, 0%, 0%)),
                 linear-gradient(to right, hsl(@_hueValue, 0%, 100%), hsl(@_hueValue, 100%, 50%));">

            <div class="color-palette-round-block"
                 @onmousedown="() => _isSelectColorPaletteRoundBlock = true"
                 style="
                     left: @DoubleToPercentage(_saturationPercentage);
                     top: @DoubleToPercentage(_lightnessPercentage);
                     background-color: @_previewColor;"></div>
        </div>

        <div class="color-slider">

            <div class="color-slider-background" id="@_colorSliderId"
                 @onmousemove="@MoveOnColorSlider"
                 @onclick="@SelectColorSlider"
                 @onmouseup="() => _isSelectColorSliderRoundBlock = false"
                 @onmouseout="() => _isSelectColorSliderRoundBlock = false">
                <div class="color-slider-round-block"
                     @onmousedown="() => _isSelectColorSliderRoundBlock = true"
                     style="left: @DoubleToPercentage(_huePercentage); background-color: hsl(@_hueValue, 100%, 50%);"></div>
            </div>
        </div>
    </div>
    <input type="text" readonly class="@ClassName" value="@RgbToHex(_rgbResult)"/>
</div>
