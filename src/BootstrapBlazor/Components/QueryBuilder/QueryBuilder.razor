@namespace BootstrapBlazor.Components
@typeparam TModel
@inherits BootstrapComponentBase

<div @attributes="@AdditionalAttributes" class="@ClassString">
    <CascadingValue Value="Filter.Filters" IsFixed="true">
        @ChildContent?.Invoke(new TModel())
    </CascadingValue>
    @if (!Filter.HasFilters() && ShowHeader)
    {
        @RenderHeader(null, Filter)
    }
    @if (_inited)
    {
        @RenderFilters(null, Filter)
    }
    else
    {
        if (ShowSkeleton)
        {
            // TODO: QueryBuilder 骨架屏
        }
        else if (ShowLoadingInFirstRender)
        {
            <div class="table-loading">
                <Spinner Color="Color.Primary" />
            </div>
        }
    }
</div>

@code {
    RenderFragment RenderFilter(FilterKeyValueAction parent, FilterKeyValueAction filter) =>
    @<div class="qb-row">
        <Select Items="_fields" @bind-Value="@filter.FieldKey" />
        <Select Items="Operations" @bind-Value="@filter.FilterAction" />
        <BootstrapInput @bind-Value="@filter.FieldValue" />
        <Button Icon="@MinusIcon" class="btn-minus" OnClick="() => OnClickRemoveFilter(parent, filter)"></Button>
        <Button Icon="@PlusIcon" class="btn-plus" OnClick="() => OnClickAddFilter(parent)"></Button>
    </div>;

    RenderFragment RenderHeader(FilterKeyValueAction? parent, FilterKeyValueAction filter) =>
    @<div class="qb-header">
        <div class="btn-group me-3">
            <Button Color="Color.Primary" Text="@Localizer[FilterLogic.And.ToString()]"></Button>
            <Button Color="Color.Secondary" Text="@Localizer[FilterLogic.Or.ToString()]"></Button>
        </div>
        <Button Icon="@PlusIcon" class="btn-plus" OnClick="() => OnClickAdd(filter)"></Button>
        <Button Icon="@RemoveIcon" class="btn-remove" OnClick="() => OnClickRemove(parent, filter)"></Button>
    </div>;
}
