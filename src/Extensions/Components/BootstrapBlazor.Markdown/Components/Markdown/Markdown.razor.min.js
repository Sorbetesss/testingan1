import BlazorComponent from"../../../_content/BootstrapBlazor/modules/base/blazor-component.js";import EventHandler from"../../../_content/BootstrapBlazor/modules/base/event-handler.js";import{addLink as n}from"../../../_content/BootstrapBlazor/modules/base/utility.js";import{isVisible as t}from"../../../_content/BootstrapBlazor/modules/base/index.js";export class Markdown extends BlazorComponent{_init(){n("_content/BootstrapBlazor.Markdown/css/bootstrap.blazor.markdown.min.css");this._invoker=this._config.arguments[0];this._options=this._config.arguments[1];this._invokerMethod=this._config.arguments[2];this._createEditor()}_createEditor(){const n=window.setInterval(()=>{t(this._element)&&(window.clearInterval(n),this._options.el=this._element,this._options.plugins=[],this._options.enableHighlight&&this._options.plugins.push(toastui.Editor.plugin.codeSyntaxHighlight),this._editor=toastui.Editor.factory(this._options),this._setListeners())},100)}_setListeners(){this._editor.on("blur",()=>{const n=this._editor.getMarkdown(),t=this._editor.getHTML();this._invoker.invokeMethodAsync(this._invokerMethod,[n,t])})}_execute(n){const t=n[1];t==="update"?this._update(n[2]):t==="do"&&this._do(n[2],n[3])}_update(n){this._editor&&this._editor.setMarkdown(n)}_do(n,t={}){if(this._editor){this._editor[n](...t);const i=this._editor.getMarkdown(),r=this._editor.getHTML();this._invoker.invokeMethodAsync("Update",[i,r])}}_dispose(){this._editor&&(this._editor.off("blur"),this._editor.destroy())}}