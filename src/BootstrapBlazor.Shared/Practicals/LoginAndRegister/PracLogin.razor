@page "/praclogin"
@inject NavigationManager Navigation
@inject MessageService MessageService
@using System.ComponentModel;

<style>
    .bg-gradient-primary {
        background-color: #4e73df;
        background-image: linear-gradient(180deg, #4e73df 10%, #224abe 100%);
        background-size: cover;
        height: -webkit-fill-available;
        width: -webkit-fill-available;
        position: absolute;
    }
</style>

<div class="bg-gradient-primary">
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-md-9 col-lg-12 col-xl-10">
                <Card class="shadow-lg o-hidden border-0 my-5">
                    <BodyTemplate>
                        <div class="row">
                            <div class="col-lg-6 d-none d-lg-flex">
                                <div class="flex-grow-1 bg-login-image">
                                    <ImageViewer Url="_content/BootstrapBlazor.Shared/images/practicals/loginbg.png" ShowPlaceHolder="true" />
                                </div>
                            </div>
                            <div class="col-lg-6">
                                <div class="p-5">
                                    <div class="text-center">
                                        <h4 class="text-dark mb-4">欢迎使用BootstrapBlazor组件库!</h4>
                                        <h4 class="text-dark mb-4">用户登陆!</h4>
                                    </div>
                                    <ValidateForm Model="@Model" @ref="ValidatorForm">
                                        <div class="mb-3">
                                            <BootstrapInput @bind-Value="Model.UserName" ShowLabel="false" PlaceHolder="请输入账号" />
                                        </div>
                                        <div class="mb-3">
                                            <BootstrapPassword @bind-Value="Model.Password" ShowLabel="false" PlaceHolder="请输入密码" />
                                        </div>
                                        <div class="mb-3">
                                            <Checkbox @bind-Value="@Model.RememberMe" TValue="bool" ShowLabel="false" ShowAfterLabel="true" DisplayText="记住登陆状态" />
                                        </div>
                                        <Button Text="登陆" OnClickWithoutRender="OnValidator" Color="Color.Primary" class="w-100"></Button>
                                        <hr />
                                        <a>
                                            <i class="fab" />
                                            <Button Text="忘记密码" Color="Color.Danger" class="w-100" OnClick="@ForgotPassword"></Button>
                                        </a>
                                        <a>
                                            <i class="fab" />
                                            <Button Text="用户注册" Color="Color.Info" class="w-100" OnClick="@UserRegistration"></Button>
                                        </a>
                                    </ValidateForm>
                                </div>
                            </div>
                        </div>
                    </BodyTemplate>
                </Card>
            </div>
        </div>
    </div>
</div>

@code {
    [NotNull]
    private LoginModel? Model { get; set; } = new();

    [NotNull]
    private ValidateForm? ValidatorForm { get; set; }

    private async Task OnValidator()
    {
        var result = ValidatorForm.Validate();
        if (result)
        {
            await MessageService.Show(new MessageOption() { Content = "登陆成功" });
        }
    }

    private async Task ForgotPassword()
    {
        await MessageService.Show(new MessageOption() { Content = "忘了就忘了吧..." });
    }

    private Task UserRegistration()
    {
        Navigation.NavigateTo("pracregister");
        return Task.CompletedTask;
    }

    class LoginModel
    {
        [Description("账号")]
        [Required(ErrorMessage = "{0}不能为空")]
        public string? UserName { get; set; }

        [Description("密码")]
        [Required(ErrorMessage = "{0}不能为空")]
        public string? Password { get; set; }

        public bool RememberMe { get; set; }
    }
}
