<div class="row g-3">
    <div class="col-12">
        <h4>Positions</h4>
        <RadioList @bind-Value="@position" />
        <h4>Models</h4>
        <p>所有模型均来自 github 开源项目，仅供展示之用，本组件并不包含任何模型。</p>
        <RadioList Items="@SrcItems" @bind-Value="@BindSrcItem" />
    </div>
    <div class="col-12">
        <div class="row g-3 mb-3">
            <div class="col-6">
                <h4>Model options</h4>
                <div class="mb-2">
                    <BootstrapInputGroup>
                        <BootstrapInputGroupLabel class="label-width" DisplayText="Scale" />
                        <Slider @bind-Value="@Scale" Max="100" />
                    </BootstrapInputGroup>
                </div>
                <div class="mb-2">
                    <BootstrapInputGroup>
                        <BootstrapInputGroupLabel class="label-width" DisplayText="X Offset" />
                        <Slider @bind-Value="@XOffset" Min="-500" Max="500"></Slider>
                    </BootstrapInputGroup>
                </div>
                <div class="mb-2">
                    <BootstrapInputGroup>
                        <BootstrapInputGroupLabel class="label-width" DisplayText="Y Offset" />
                        <Slider @bind-Value="@YOffset" Min="-500" Max="500" />
                    </BootstrapInputGroup>
                </div>
            </div>
            <div class="col-auto">
                <h4>Other options</h4>
                <div class="mb-2">
                    <BootstrapInputGroup>
                        <BootstrapInputGroupLabel class="label-width" DisplayText="IsDraggable" />
                        <Checkbox TValue="bool" @bind-Value="@IsDraggable" />
                    </BootstrapInputGroup>
                </div>
                <div class="mb-2">
                    <BootstrapInputGroup>
                        <BootstrapInputGroupLabel class="label-width" DisplayText="HitAreaFrames" />
                        <Checkbox TValue="bool" @bind-Value="@AddHitAreaFrames" />
                    </BootstrapInputGroup>
                </div>
                <div class="mb-2">
                    <BootstrapInputGroup>
                        <BootstrapInputGroupLabel class="label-width" DisplayText="BackgroundAlpha" />
                        <Checkbox TValue="bool" @bind-Value="@BackgroundAlpha" ShowLabel="true" DisplayText="BackgroundAlpha" />
                    </BootstrapInputGroup>
                </div>
                <div class="mb-2">
                    <div class="input-group input-group-sm mb-3">
                        <span class="input-group-text label-width">BackgroundColor</span>
                        <div class="pick-radius">
                            <ColorPicker @bind-Value="@BackgroundColor" />
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<Live2DDisplay Source=@BindSrcItem.Value Scale=@_scale IsDraggable="@IsDraggable"
               Position=@position AddHitAreaFrames=@AddHitAreaFrames
               XOffset=@_xOffset BackgroundColor=@BackgroundColor
               YOffset=@_yOffset BackgroundAlpha=@BackgroundAlpha />

<style>
    .label-width {
        width: 150px;
    }

    .pick-radius :first-child {
        border-radius: 0px;
    }
</style>

@code {
    private bool IsDraggable { get; set; } = true;

    private string BackgroundColor { get; set; } = "#000000";

    private bool BackgroundAlpha { get; set; }

    private bool AddHitAreaFrames { get; set; }

    private double _scale = 0.2;

    private double Scale
    {
        get => _scale * 100;
        set => _scale = value / 100;
    }

    private int _xOffset;

    private double XOffset
    {
        get => _xOffset;
        set => _xOffset = Convert.ToInt32(value);
    }

    private int _yOffset { get; set; }

    private double YOffset
    {
        get => _yOffset;
        set => _yOffset = Convert.ToInt32(value);
    }

    private LivePosition position { get; set; } = LivePosition.BottomLeft;

    private SelectedItem BindSrcItem { get; set; } = new SelectedItem();

    private IEnumerable<SelectedItem> SrcItems { get; } = new SelectedItem[]
    {
        new SelectedItem("./models/shizuku/shizuku.model.json","shizuku"),
        new SelectedItem("./models/haru/haru_greeter_t03.model3.json","haru"),
        new SelectedItem("https://raw.githubusercontent.com/iCharlesZ/vscode-live2d-models/master/model-library/bilibili-22/index.json","bilibili-22"),
        new SelectedItem("https://raw.githubusercontent.com/iCharlesZ/vscode-live2d-models/master/model-library/bilibili-33/index.json","bilibili-33"),
        new SelectedItem("https://raw.githubusercontent.com/iCharlesZ/vscode-live2d-models/master/model-library/chiaki_kitty/chiaki_kitty.model.json","chiaki_kitty"),
        new SelectedItem("https://raw.githubusercontent.com/iCharlesZ/vscode-live2d-models/master/model-library/date_16/date_16.model.json","date_16"),
        new SelectedItem("https://raw.githubusercontent.com/iCharlesZ/vscode-live2d-models/master/model-library/hallo_16/hallo_16.model.json","hallo_16"),
        new SelectedItem("https://raw.githubusercontent.com/iCharlesZ/vscode-live2d-models/master/model-library/haruto/haruto.model.json","haruto"),
    };
}
