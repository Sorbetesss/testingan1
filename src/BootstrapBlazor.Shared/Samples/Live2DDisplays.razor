@page "/live2ddisplay"
@inject IStringLocalizer<Live2DDisplays> Localizer

<h3>@Localizer["Live2DDisplayTitle"]</h3>

<h4>@Localizer["Live2DDisplayDescription"]</h4>

<PackageTips Name="BootstrapBlazor.Live2DDisplay" />
<div class="code-label">@Localizer["Live2DDisplayNormalTips"]</div>
<Pre>var provider = new FileExtensionContentTypeProvider();
provider.Mappings[".moc"] = "application/x-msdownload";
provider.Mappings[".moc3"] = "application/x-msdownload";
provider.Mappings[".mtn"] = "application/x-msdownload";

app.UseStaticFiles(new StaticFileOptions { ContentTypeProvider = provider });</Pre>

<DemoBlock Title="@Localizer["Live2DDisplayNormalTitle"]"
           Introduction="@Localizer["Live2DDisplayNormalIntro"]"
           Name="Live2DDisplayNormal"
           Demo="typeof(Demos.Live2DDisplay.Live2DDisplayNormal)">
</DemoBlock>

<AttributeTable Items="@GetAttributes()" />

@code {
    /// <summary>
    /// 获得属性方法
    /// </summary>
    /// <returns></returns>
    private IEnumerable<AttributeItem> GetAttributes() => new AttributeItem[]
    {
        // TODO: 移动到数据库中
        new AttributeItem() {
            Name = "Source",
            Description = Localizer["Live2DDisplaysSource"],
            Type = "string",
            ValueList = " — ",
            DefaultValue = "empty"
        },
        new AttributeItem() {
            Name = "Scale",
            Description = Localizer["Live2DDisplaysScale"],
            Type = "double",
            ValueList = " — ",
            DefaultValue = " — "
        },
        new AttributeItem() {
            Name = "XOffset",
            Description = Localizer["Live2DDisplaysXoffset"],
            Type = "int",
            ValueList = " — ",
            DefaultValue = " — "
        },
        new AttributeItem() {
            Name = "YOffset",
            Description = Localizer["Live2DDisplaysYoffset"],
            Type = "int",
            ValueList = " — ",
            DefaultValue = " — "
        },
        new AttributeItem() {
            Name = "IsDraggable(not yet implemented)",
            Description = Localizer["Live2DDisplaysIsDraggble"],
            Type = "bool",
            ValueList = " — ",
            DefaultValue = "false"
        },
        new AttributeItem() {
            Name = "AddHitAreaFrames",
            Description = Localizer["Live2DDisplaysAddHitAreaFrames"],
            Type = "bool",
            ValueList = " — ",
            DefaultValue = "false"
        },
        new AttributeItem() {
            Name = "Position",
            Description = Localizer["Live2DDisplaysPosition"],
            Type = "enum",
            ValueList = "Default|BottomLeft|BottomRight|TopLeft|TopRight",
            DefaultValue = "Default"
        },
        new AttributeItem() {
            Name = "BackgroundColor",
            Description = Localizer["Live2DDisplaysBackgroundColor"],
            Type = "string",
            ValueList = " — ",
            DefaultValue = "#000000"
        },
        new AttributeItem() {
            Name = "BackgroundAlpha",
            Description = Localizer["Live2DDisplaysBackgroundAlpha"],
            Type = "bool",
            ValueList = " — ",
            DefaultValue = "false"
        }
    };
}
