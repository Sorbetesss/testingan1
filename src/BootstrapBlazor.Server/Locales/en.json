{
  "BootstrapBlazor.Server.Components.Pages.Breakpoints": {
    "Heading": "Breakpoints",
    "Heading1": "Breakpoints are customizable widths that determine how responsive layouts behave in Bootstrap across devices or viewport sizes",
    "Paragraph1": "Available breakpoints",
    "Paragraph2": "Bootstrap includes six default breakpoints, sometimes called grid layers, for responsive builds",
    "TableHeading1": "Breakpoint name",
    "TableHeading2": "Class suffix",
    "TableHeading3": "Threshold",
    "Name1": "tiny",
    "Name2": "small",
    "Name3": "medium",
    "Name4": "large",
    "Name5": "oversized",
    "Name6": "extra large",
    "Amount": "pixel",
    "Footer1": "The components have been adapted to extra large screens by default, and many defaults are",
    "Footer2": "like",
    "Footer3": "The default popup size"
  },
  "BootstrapBlazor.Server.Components.Pages.Chats": {
    "ChatsTitle": "Azure OpenAI",
    "ChatsDescription": "Azure OpenAI service is a chatbot based on Azure cloud service, which can interact with users through dialogue",
    "ChatNormalTitle": "Azure OpenAI",
    "ChatNormalIntro": "Chat dialog by calling <code>IAzureOpenAIService</code> service method <code>GetChatCompletionsAsync</code>",
    "ChatUserTitle": "Chat session",
    "ChatUserMessageTitle": "{0} (remaining times {1})",
    "ChatDemoDesc": "Since <code>GPT</code> has no free interface, this component requires <code>Gitee</code> or <code>Github</code> to authorize and log in to limit the number of times the account can be used",
    "ChatExit": "Exit",
    "ChatGitee": "Gitee OAuth",
    "ChatGithub": "Github OAuth"
  },
  "BootstrapBlazor.Server.Components.Pages.Coms": {
    "Search": "Search for the desired component",
    "Text1": "Layout",
    "DividerText": "Divider",
    "LayoutText": "Layout",
    "FooterText": "Footer",
    "RowText": "Row",
    "ScrollText": "Scroll",
    "SkeletonText": "Skeleton",
    "SplitText": "Split",
    "Text2": "Navigation",
    "AnchorText": "Anchor",
    "AnchorLinkText": "AnchorLink",
    "BreadcrumbText": "Breadcrumb",
    "MenuText": "Menu",
    "NavText": "Nav",
    "DropdownText": "Dropdown",
    "FullScreenText": "FullScreen",
    "GoTopText": "GoTop",
    "LogoutText": "Logout",
    "PaginationText": "Pagination",
    "StepsText": "Step",
    "TabText": "Tab",
    "Text3": "Form",
    "EditorFormText": "EditorForm",
    "ValidateFormText": "ValidateForm",
    "AutoCompleteText": "AutoComplete",
    "AutoFillText": "AutoFill",
    "ButtonText": "Button",
    "CascaderText": "CascadingSelection",
    "CheckboxText": "Checkbox",
    "CheckboxListText": "CheckboxList",
    "ColorPickerText": "ColorPicker",
    "DateTimePickerText": "DateTimePicker",
    "DateTimeRangeText": "DateTimeRange",
    "EditorText": "Editor",
    "InputText": "Input",
    "InputNumberText": "InputNumber",
    "InputGroupText": "InputGroup",
    "MarkdownText": "Markdown",
    "FloatingLabelText": "FloatingLabel",
    "RadioText": "Radio",
    "RateText": "Rate",
    "SelectText": "Select",
    "MultiSelectText": "MultiSelect",
    "SliderText": "Slider",
    "SwitchText": "Switch",
    "TextareaText": "Textarea",
    "ToggleText": "Toggle",
    "TransferText": "Transfer",
    "UploadText": "Upload",
    "Text4": "Data",
    "AvatarText": "Avatar",
    "BadgeText": "Badge",
    "CardText": "Card",
    "CalendarText": "Calendar",
    "CaptchaText": "Captcha",
    "CarouselText": "Carousel",
    "CircleText": "Circle",
    "ClientText": "Client",
    "DisplayText": "Display",
    "EmptyText": "Empty",
    "LocatorText": "Locator",
    "ImageViewerText": "ImageViewer",
    "IpText": "IpAddress",
    "PrintText": "Print",
    "TitleText": "Title",
    "DownloadText": "Download",
    "TransitionText": "Transition",
    "CollapseText": "Collapse",
    "DropdownWidgetText": "DropdownWidget",
    "GroupBoxText": "GroupBox",
    "LinkButtonText": "LinkButton",
    "ListViewText": "ListView",
    "PopoverText": "Popover",
    "QRCodeText": "QRCode",
    "SearchText": "Search",
    "RecognizerText": "Recognizer",
    "SpeechWaveText": "SpeechWave",
    "SwitchButtonText": "Switch Button",
    "TableText": "Table",
    "TagText": "Tag",
    "TimelineText": "Timeline",
    "TooltipText": "Tooltip",
    "TreeText": "Tree",
    "TreeViewText": "TreeView",
    "BarcodeReaderText": "BarcodeReader",
    "BlockText": "Block",
    "CameraText": "Camera",
    "HandwrittenPageText": "Handwritten",
    "Text5": "Notification",
    "AlertText": "Alert",
    "ConsoleText": "Console",
    "DialogText": "Dialog",
    "DrawerText": "Drawer",
    "EditDialogText": "EditDialog",
    "MessageText": "Message",
    "ModalText": "Modal",
    "LightText": "Light",
    "PopoverConfirmText": "PopConfirm",
    "ProgressText": "Progress",
    "ReconnectorText": "Reconnector",
    "ResponsiveText": "Responsive",
    "SpinnerText": "Spinner",
    "SweetAlertText": "SweetAlert",
    "SearchDialogText": "SearchDialog",
    "ToastText": "Toast",
    "TimerText": "Timer",
    "Text6": "Chart",
    "ChartText": "Chart",
    "ChartSummaryText": "Summary",
    "ChartLineText": "Line",
    "ChartBarText": "Bar",
    "ChartPieText": "Pie",
    "ChartDoughnutText": "Doughnut",
    "ChartBubbleText": "Bubble",
    "DispatchText": "Dispatch",
    "GeolocationText": "Geolocation",
    "OnScreenKeyboardText": "OnScreenKeyboard",
    "NotificationsText": "Notification",
    "SignaturePadText": "SignaturePad",
    "BluetoothText": "Bluetooth & Printer",
    "PdfReaderText": "PDF Reader",
    "VideoPlayerText": "VideoPlayer",
    "FileViewerText": "FileViewer",
    "WebSerialText": "WebSerial",
    "MindMapText": "MindMap",
    "WebSpeechText": "WebSpeech"
  },
  "BootstrapBlazor.Server.Components.Pages.Index": {
    "BodyClassString": "welcome-body-en",
    "HeaderTitle": "Bootstrap style Blazor UI component library",
    "HeaderDesc": "Based on the <code>Bootstrap</code> style library, it is carefully built, and {0} a variety of commonly used components have been added to bring you an extraordinary feeling for rapid development projects",
    "HeaderBody": "The ",
    "HeaderBody1": "native Blazor components library on the market",
    "DynamicText": "best to use",
    "DynamicText1": "best looking",
    "DynamicText2": "most simple and practical",
    "TagTitle": "Component",
    "Span1": "Tree",
    "Span2": "Menu",
    "Span3": "Tag",
    "Span4": "Table",
    "Span5": "Layout",
    "Span6": "Notification",
    "Span7": "Upload",
    "Span8": "Switch",
    "CarouselH1": "Chart Component",
    "CarouselP1": "Provide a variety of commonly used chart components",
    "CarouselH2": "Chart IconComponent",
    "CarouselP2": "Multi-dimensional data comparison",
    "CarouselH3": "Full-featured table component",
    "CarouselP3": "With all functions of adding, deleting, modifying, searching, paging, and sorting",
    "CarouselH4": "Super timeline function",
    "CarouselP4": "Custom nodes display arbitrary components",
    "ContainerH1": "Rich Components",
    "ContainerD1": "This set of components library contains more than {0} multiple components, from simple buttons to complex page-level components",
    "ContainerH2": "Performance",
    "ContainerD2": "Each control has been fine-tuned to optimize the refresh logic between parent and child components to avoid multiple loop updates",
    "ContainerH3": "Easy to use",
    "ContainerD3": "Easily grasp how to use components and quickly incorporate BootstrapBlazor controls into the project",
    "ContainerH4": "Free and open source",
    "ContainerD4": "Simple, direct, free to use, no dependent components, dependent on Bootstrap are all built-in",
    "ContainerH5": "Demos and examples",
    "ContainerD5": "Detailed documentation and online demonstration, simple function setting, direct copy code out of the box",
    "ContainerH6": "Continually updated",
    "ContainerD6": "Gitee platform hosting open source, never closed source, continuous update, timely response to questions and feedback",
    "DonateH1": "Donate",
    "DonateH2": "Scan the code to donate and invite the author to have a cup of coffee"
  },
  "BootstrapBlazor.Server.Components.Pages.Install": {
    "InstallTitle": "Install",
    "GitP1": "There are many kinds of Git tools that everyone is familiar with, here I introduce two Git client tools",
    "GitP2": "It is recommended to use the <a href='https://fork.dev'>Fork</a> tool to install, it can better and <a href='https://visualstudio.microsoft.com/vs/getting- started/' target='_blank'>Visutal Studio</a> to use with development tools.",
    "NugetInstall": "Nuget Install",
    "NugetP1": "Use <a href='https://www.nuget.org/packages?q=BootstrapBlazor' target='_blank'>nuget.org</a> to install BootstrapBlazor components",
    "EnvBuildTitle": "Project Environment Construction",
    "EnvLi1": "Install .net core sdk <a href='http://www.microsoft.com/net/download' target='_blan'>Official Website</a>",
    "EnvLi2": "Install Visual Studio 2022 and above <a href='https://visualstudio.microsoft.com/vs/getting-started' target='_blank'>Official website",
    "EnvLi3": "Pull the project code BootstrapBlazor <a href='{0}' target='_blank'>Warehouse URL</a>"
  },
  "BootstrapBlazor.Server.Components.Pages.Golbalization": {
    "Title": "Globalization",
    "SubTitle": "ASP.NET Core Blazor Globalization",
    "P1": "Please check <a href='https://learn.microsoft.com/zh-cn/aspnet/core/blazor/globalization-localization?WT.mc_id=DT-MVP-5004174' target='_blank'> before reading the following knowledge points Official document</a>"
  },
  "BootstrapBlazor.Server.Components.Pages.Install_Server": {
    "Title": "Server-Side Blazor Installation Tutorial",
    "D1": "choose",
    "D2": "project type, then click",
    "Configure": "Configure Service",
    "CodeComment": "Add this line of code"
  },
  "BootstrapBlazor.Server.Components.Pages.Install_Maui": {
    "H1": "Environmental preparation",
    "P1": "Make sure the system is installed",
    "P2": "Version",
    "P3": "Create a project with Visual Studio",
    "P4": "Step 1. Create a project",
    "P5": "Create a new project",
    "P6": "choose",
    "P7": ".NET MAUI Blazor application",
    "P8": "and click",
    "P9": "Next step",
    "P10": "Choose a name and location for the project, then click",
    "P11": "Next step",
    "P12": "create",
    "P13": "Step 2. Add the BootstrapBlazor component to the existing project",
    "P14": "1. Search <code>BootstrapBlazor</code> through the <b>nuget.org</b> source",
    "P15": "Right click on the project in the solution and select",
    "P16": "2. Install the BootstrapBlazor package",
    "P17": "3. Add stylesheet file",
    "P18": "Add a theme style sheet to the host file",
    "P19": "Need to reference BootstrapBlazor.FontAwesome package",
    "P20": "4. Add the Javascript file",
    "P21": "add code",
    "P22": "5. Register the BootstrapBlazor service",
    "P23": "6. Add namespace reference",
    "P24": "Add the following to",
    "P25": "file so that",
    "P26": "Components are recognized in the file",
    "P27": "7. Increase",
    "P28": "component to",
    "P29": "in file",
    "P30": "under development",
    "P31": "Step 3. Use components in the page",
    "P32": "The last step is to use in the page <code>BootstrapBlazor</code> component and run it in the browser. E.g",
    "P33": "Please remove the default <code>Bootstrap</code> style link <code>&lt;link rel='stylesheet' href='css/bootstrap/bootstrap.min.css' /&gt;</code>; The icon of this project uses the <code>FontAwesome</code> icon library. Please refer to yourself or get the <code>BootstrapBlazor.FontAwesome</code> nuget package",
    "P34": "1. Add one to the page",
    "P35": "button",
    "P36": "test",
    "P37": "2. In",
    "P38": "middle",
    "P39": "run the application",
    "P40": "Mixed modes using both Razor and Xaml",
    "P41": "1. Pages folder add a file named",
    "P42": "The MAUI ContentView control file",
    "P43": "2. Revise",
    "P44": "in the file",
    "P45": "for",
    "P46": "(You can also use",
    "P47": "and other navigation components)",
    "P48": "exist",
    "P49": "middle",
    "P50": "run the application",
    "P51": "MAUI Blazor Installation tutorial"
  },
  "BootstrapBlazor.Server.Components.Pages.Install_wasm": {
    "Install_wasmHeading": "Client Blazor Installation Tutorial",
    "Install_wasmDescription": "choose <b>Blazor WebAssembly App</b> project type, then click <b>Create</b>",
    "Title": "Client Side",
    "Install_wasmCodeComment": "Add this line of code"
  },
  "BootstrapBlazor.Server.Components.Pages.Introduction": {
    "Title": "Introduction",
    "P1": "BootstrapBlazor is an enterprise-level component library based on Bootstrap and Blazor, which can be considered as the Blazor version of the Bootstrap project.",
    "P2": "The dependency is：BootstrapBlazor > Bootstrap",
    "P3": "In the latest <a href='template' target='_blank'>Project Template</a> ,the above dependencies are packaged and bundled, which greatly simplifies use",
    "UpdateTitle": "Update Log",
    "UpdateLog": "In order to fix the components <b><code>bugs</code></b>, a small version of the component may be released every day. The second <b><code>Thursday</code></b> every month release <b><code>official version</code></b>",
    "UpdateLogLink": "[Update Log]",
    "LearnTitle": "Learning materials",
    "LearnLi1": "Blazor Official Document",
    "LearnLi2": "Use Blazor WebAssembly and Visual Studio Code to generate web applications",
    "LearnLi3": "What is Blazor",
    "LearnLi4": "Exercise-Configure the development environment",
    "LearnLi5": "Blazor Components",
    "LearnLi6": "Exercise-Add Components",
    "LearnLi7": "Data binding and events",
    "LearnLi8": "Exercise-Data binding and Events",
    "Summarize": "Summarize",
    "ProjectsShow": "Exhibition",
    "P5": "The largest code hosting collaborative development platform in China <b><a href='{0}' target='_blank'>Gitee</a></b> C# The highest star in the sector <a href='{1}' target='_blank'><img src='{2}' alt='star'></a> Works <b><a href='{3}' target='_blank'>Universal background management system BootstrapAdmin</a></b> Ready to use this component to achieve all functions",
    "ShowWebSiteTitle": "Demo Site",
    "GetStarted": "Get Started",
    "QuikStart": "Quick Start",
    "Features": "Features of Components",
    "P6": "The Bootstrap Blazor UI component library provides everything from basic <code>Button</code> components to advanced web-level <code>SmartPage</code> components",
    "Advantage": "Advantage",
    "AdvantageLi1": "No need to write <code>Javascript</code> to use components",
    "AdvantageLi2": "The component supports all <code>html</code> features",
    "AdvantageLi3": "The component supports two-way data binding",
    "AdvantageLi4": "Components support automatic client verification",
    "AdvantageLi5": "Component support combination",
    "Community": "Community"
  },
  "BootstrapBlazor.Server.Components.Pages.Layout": {
    "Heading": "Component Hierarchy",
    "Para1": "Since there are many pop-up window components, in some scenarios, multiple pop-up windows will be used to combine them. This chapter describes how to manage components in layers. Below is",
    "Para2": "provided built-in",
    "Para3": "value",
    "Para4": "This set of components additionally",
    "Para5": "The components are layered as follows",
    "Para6": "test session",
    "Button": "test",
    "Footer1": "because",
    "Footer2": "The component does not provide a service form, and it is retrofitted later"
  },
  "BootstrapBlazor.Server.Components.Pages.Localization": {
    "Title": "Localization",
    "P1": "Localization is the process of customizing an application for a given language and region.",
    "P2": "A component allows you to translate its UI elements into the desired language. This includes text for buttons, filter operator properties, etc. The component uses the current request by default",
    "P3": "Culture language, this article will show you how to use this feature in your app",
    "T1": "Please check before reading the following knowledge points",
    "T2": "Microsoft Official Documentation",
    "T3": "because",
    "T4": "The mode cannot obtain the system language and culture information, the default culture information is",
    "T5": "Please refer to the Change Default Language section at the end of the article",
    "N1": "How localization works in components",
    "N2": "Components additionally support the use of",
    "N3": "Type key-value information as a resource file, which is parsed as",
    "N4": "String rendered in",
    "N5": "The package comes with the following resource files",
    "N6": "Chinese (zh)",
    "N7": "English (en)",
    "N8": "German (de)",
    "N9": "Portuguese (pu)",
    "N10": "The component has a built-in localization language fallback mechanism. For example, the request culture is",
    "N11": "When the corresponding culture resource file is not provided, the built-in logic tries to localize through the parent culture to",
    "N12": "For example, the fallback mechanism is as follows",
    "N13": "arrive",
    "N14": "If the set localization language does not provide the resource file after falling back and still cannot find the resource file, use",
    "N15": "The cultural information set by the parameter is localized, the default is",
    "N16": "pay attention",
    "N17": "Due to some systems such as",
    "N18": "After the program runs, the thread cannot obtain the cultural information, and the default cultural information can be set through the configuration file",
    "N19": "Enable localization",
    "N20": "configuration file",
    "N21": "pass",
    "N22": "Set the fallback culture information, that is, use this configuration culture when the currently requested culture information is not found, through",
    "N23": "Set supported cultures collection",
    "N24": "Enable .NET Core localization service",
    "N25": "Add Bootstrap Blazor components",
    "N26": "Add multi-language support configuration information",
    "N27": "Enable localization",
    "N28": "Add BootstrapBlazor component",
    "N29": "Add localization service configuration information",
    "N30": "Enable localization middleware and set supported culture info",
    "N31": "Implement UI localization information storage (for example, cookies)",
    "N32": "Add UI that allows users to change localization",
    "N33": "Please select language",
    "N34": "Using the api method is suitable for Server-Side mode",
    "N35": "additional",
    "N36": "resource",
    "N37": "The component library supports Microsoft's default",
    "N38": "Format resource, also supports embedded",
    "N39": "format resources, and specific physical",
    "N40": "document",
    "N41": "The resource file is a merge relationship, and the addressing rule priority is",
    "N42": "Microsoft resx embedded resource file",
    "N43": "External json physical file",
    "N44": "json embedded resource file",
    "N45": "Built-in json resource file",
    "N46": "Ignore cultural info loss logs",
    "N47": "Set up RESX format multilingual resource files such as Program.{CultureName}.resx",
    "N48": "Set Json format embedded resource file",
    "N49": "Set Json physical path file",
    "N50": "or use service extension method",
    "N51": "Ignore the loss of localized key-value culture information",
    "N52": "Attach your own json multilingual culture resource file such as zh-TW.json",
    "N53": "Set Json physical path file",
    "N54": "Enable .NET Core localization service",
    "N55": "Add BootstrapBlazor component",
    "N56": "increase localization",
    "N57": "Implement UI localization information storage (for example, localStorage)",
    "N58": "Consistent with Server-Side",
    "N59": "Change the default language setting",
    "N60": "Set default culture to zh-CN",
    "N61": "Configure whether to display missing localized resource information",
    "N62": "Add BootstrapBlazor service",
    "N63": "Ignore the loss of localized key-value culture information",
    "LocalizationFileDesc": "The component built-in localization resource files are <code>en</code> <code>zh</code>. The other localization resource files <code>de</code> <code>es</code> <code>pt</code> <code>zh-TW</code> which are placed in the project folder <code>localization</code>. you can be downloaded by yourself and imported into the project through the injection service <a href=\"https://gitee.com/LongbowEnterprise/BootstrapBlazor/tree/main/localization\" target=\"_blank\"><img src=\"./images/gitee.svg\" class=\"gitee-icon\"></a> <a href=\"https://github.com/dotnetcore/BootstrapBlazor/tree/main/localization\" target=\"_blank\"><i class=\"fa-brands fa-github github-icon\"></i></a>",
    "AdditionalJsonFile": "Additional <code>json</code> localization file",
    "ES": "Spanish (es)",
    "TW": "中國台灣 (zh-TW)"
  },
  "BootstrapBlazor.Server.Components.Pages.Prac": {
    "CategoryTitle": "Bootstrap Blazor Practical Cases",
    "DashboardSummary": "Dashboard",
    "LoginSummary": "Login&Register",
    "PinteresoSummary": "Pintereso"
  },
  "BootstrapBlazor.Server.Components.Pages.Template": {
    "Title": "Project Template",
    "SubTitle": "Bootstrap Blazor App Template",
    "P1": "In order to make it easier for everyone to use this set of components to quickly build projects, the author has made <b>Project Templates</code></b>, using <code>dotnet new</code> command line mode, using Proceed as follows:",
    "P2": "1. Install the project template",
    "P3": "2. Create project",
    "P4": "After the project is created, the <code>BootstrapBlazorApp</code> solution will be generated in the current folder, and the <code>src</code> directory contains <code>Server-Side</code> <code>Wasm</code> Both types of projects can be run directly with <kbd>F5</kbd>",
    "P5": "3. Update project template",
    "P6": "The dotnet new update option checks if there are updates available for the template packages that are currently installed and installs them.",
    "P7": "3. Uninstall project template",
    "SubTitle1": "Bootstrap Blazor App Extension",
    "P8": "In order to facilitate the use of the <code>Bootstrap Blazor</code> component library, the author has created the <b>Project Template (<code>Bootstrap Blazor Project Template</code>)</b> extension plug-in, which can be installed through <code >Visual Studio 2022 IDE</code> When creating a new project, select the <code>Bootstrap Blazor project template</code>, and the solution is built in two types: <code>Server-Side</code> and <cide>wasm</cide> project",
    "P9": "Download Project template",
    "P10": "able to pass",
    "P11": "Built-in plugin extensions",
    "P12": "or",
    "P13": "Microsoft Plug-in Marketplace",
    "P14": "portal",
    "P15": "Direct download; domestic access to the Microsoft plug-in market is relatively slow, you can access the code cloud connection",
    "P16": "portal",
    "P17": "Install Project template",
    "P18": "Create Project"
  },
  "BootstrapBlazor.Server.Components.Pages.Theme": {
    "H1": "Component theme",
    "H2": "Test",
    "P1": "The current website theme supports the following",
    "P2": "Motronic (integrated)",
    "P3": "LayUI (in progress)",
    "P4": "Bluma (in progress)",
    "P5": "Ant Design (in progress)",
    "P6": "Theme switch",
    "P7": "If switch to",
    "P8": "theme, please use the original",
    "P9": "The added style file is as follows",
    "P10": "add this line"
  },
  "BootstrapBlazor.Server.Components.App": {
    "Title": "Bootstrap Blazor enterprise-level UI component library",
    "Reload": "Reload",
    "ErrorMessage": "An unhandled exception has occurred. See browser dev tools for details."
  }
}
